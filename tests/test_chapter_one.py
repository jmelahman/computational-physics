import unittest

from phys.chapter_one.exercise import one
from phys.chapter_one.exercise import two
from phys.chapter_one.exercise import five

class TestQuadrature(unittest.TestCase):

    def test_exercise_one_output(self):
        expected_output = """0.50000 & -0.228254 & 0.183789 & -0.022233 & -0.009499 & -0.001093
0.20000 & -0.087462 & 0.080272 & -0.003595 & -0.000586 & -0.000029
0.10000 & -0.042939 & 0.041138 & -0.000900 & -0.000072 & -0.000002
0.05000 & -0.021257 & 0.020807 & -0.000225 & -0.000009 & -0.000000
0.02000 & -0.008450 & 0.008378 & -0.000036 & -0.000001 & -0.000000
0.01000 & -0.004216 & 0.004198 & -0.000009 & -0.000000 & -0.000000
0.00500 & -0.002106 & 0.002101 & -0.000002 & -0.000000 & -0.000000
0.00200 & -0.000842 & 0.000841 & -0.000000 & -0.000000 & -0.000000
0.00100 & -0.000421 & 0.000421 & -0.000000 & -0.000000 & -0.000000
0.00050 & -0.000210 & 0.000210 & -0.000000 & -0.000000 & -0.000000
0.00020 & -0.000084 & 0.000084 & -0.000000 & -0.000000 & -0.000000
0.00010 & -0.000042 & 0.000042 & -0.000000 & 0.000000 & 0.000000
0.00005 & -0.000021 & 0.000021 & -0.000000 & 0.000000 & 0.000000
0.00002 & -0.000008 & 0.000008 & -0.000000 & -0.000000 & 0.000000
0.00001 & -0.000004 & 0.000004 & -0.000000 & -0.000000 & -0.000000
"""
        output = one.create_output()
        self.assertEqual(output, expected_output)

    def test_exercise_two_output(self):
        expected_output = """4 & 0.2500000 & 0.008940 & 0.000037 & 0.000001
8 & 0.1250000 & 0.002237 & 0.000002 & 0.000000
16 & 0.0625000 & 0.000559 & 0.000000 & 0.000000
32 & 0.0312500 & 0.000140 & 0.000000 & 0.000000
64 & 0.0156250 & 0.000035 & 0.000000 & 0.000000
128 & 0.0078125 & 0.000009 & 0.000000 & -0.000000
"""
        output = two.create_output()
        self.assertEqual(output, expected_output)

    def test_exercise_five_output(self):
        expected_output = """0 & 1.236068 & 1.236068
1 & -0.763932 & 0.236068
2 & -0.097265 & -0.097265
3 & -0.002027 & 0.005299
4 & -0.000001 & 0.000113
5 & 0.000000 & -0.000000
"""
        output = five.create_output()
        self.assertEqual(output, expected_output)

if __name__ == '__main__':
    unittest.main()
