PROGRAM EXERCISE2_6
!USES AN ASSORTMENT OF TECHNIQUES TO SOLVE THE
!THE DIFFERENTIAL EQUATION DY/DX=-XY WITH
!AN INITIAL VALUE OF Y(0)=1 & USING 16 STEPS
IMPLICIT NONE
    REAL :: X,Y
    REAL :: H
    REAL :: ERROR

10  PRINT *,'ENTER A VALUE OF X'
    READ *,X
    Y = 1.0
    H = X/16.0

    PRINT *,'EXACT:              ',EXP(-X)

    PRINT *,
    CALL EULER(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'EULER ERROR:        ',ERROR

    Y = 1.0
    CALL ADAMS2(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'ADAMS2 ERROR:       ',ERROR

    Y = 1.0
    CALL ADAMS4(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'ADAMS4 ERROR:       ',ERROR

    Y = 1.0
    CALL TAYLOR(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'TAYLOR ERROR:       ',ERROR

    Y = 1.0
    CALL RK2(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'RUNGE-KUTTA2 ERROR: ',ERROR

    Y = 1.0
    CALL RK3(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'RUNGE-KUTTA3 ERROR: ',ERROR

    Y = 1.0
    CALL RK4(X,Y,H)
    ERROR = Y-EXP(-X)
    PRINT *,'RUNGE-KUTTA4 ERROR: ',ERROR

    GOTO 10
END PROGRAM

SUBROUTINE RK4(X,Y,H)
!USES THE RUNGE-KUTTA 4TH-ORDER METHOD
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y
    REAL :: K1,K2,K3,K4
    REAL ::FUNC
    INTEGER :: I

    DO I=0,15
        K1 = H*FUNC(I*H,Y)
        K2 = H*FUNC((I+.5)*H,Y+K1/2.)
        K3 = H*FUNC((I+.5)*H,Y+K2/2.)
        K4 = H*FUNC((I+1)*H,Y+K3)
        Y = Y+(K1+2.*K2+2.*K3+K4)/6.
    END DO

END SUBROUTINE


SUBROUTINE RK3(X,Y,H)
!USES THE RUNGE-KUTTA 3RD-ORDER METHOD
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y
    REAL :: K1,K2,K3
    REAL ::FUNC
    INTEGER :: I

    DO I=0,15
        K1 = H*FUNC(I*H,Y)
        K2 = H*FUNC((I+.5)*H,Y+K1/2.)
        K3 = H*FUNC((I+1)*H,Y-K1+2.*K2)
        Y = Y+(K1+4.*K2+K3)/6.
    END DO

END SUBROUTINE

SUBROUTINE RK2(X,Y,H)
!USES THE RUNGE-KUTTA 2ND-ORDER METHOD
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y
    REAL ::FUNC
    INTEGER :: I

    DO I=0,15
        Y = Y+H*FUNC((I+.5)*H,Y+H*FUNC(I*H,Y)/2.)
    END DO

END SUBROUTINE

SUBROUTINE TAYLOR(X,Y,H)
!USES THE TAYLOR SERIES METHOD. PARTIAL
!DERIVATIVES ARE DF/DX = -1 AND DF/DY = 0
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y
    REAL ::FUNC
    INTEGER :: I

    DO I=0,15
        Y = Y+H*FUNC(H*I,Y)+H**2*(-FUNC(H*I,Y))/2.0
    END DO

END SUBROUTINE

SUBROUTINE ADAMS4(X,Y4,H)
!PASSES THE INITAL VALUE AS Y4. USES EULER'S
!METHOD TO ESTIMATE N-1,,-2,-3 VALUES THEN
!PROCEEDS WITH THE ADAMS-BASHFORTH 4-STEP
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y1,Y2,Y3,Y4,YOLD
    REAL ::FUNC
    INTEGER :: I

    Y3 = Y4+H*FUNC(-H,Y4)
    Y2 = Y3+H*FUNC(-H*2.,Y3)
    Y1 = Y3+H*FUNC(-H*3.,Y2)
    DO I=0,15
        YOLD = Y4
        Y4 = Y4+H*(55.*FUNC(H*I,Y4)-59.*FUNC(H*(I-1),Y3)+37.*FUNC(H*(I-2),Y2)-9.*FUNC(H*(I-3),Y1))/24.
        Y1 = Y2
        Y2 = Y3
        Y3 = YOLD
    END DO
END SUBROUTINE

SUBROUTINE ADAMS2(X,Y2,H)
!PASSES THE INITAL VALUE AS Y2. USES EULER'S
!METHOD TO ESTIMATE N-1 VALUE THEN
!PROCEEDS WITH THE ADAMS-BASHFORTH 2-STEP
IMPLICIT NONE
    REAL :: X,H
    REAL :: Y1,Y2,YOLD
    REAL ::FUNC
    INTEGER :: I

    Y1 = Y2+H*FUNC(-H,Y1)
    DO I=1,15
        YOLD = Y2
        Y2 = Y2+H*(3.*FUNC(H*I,Y2)/2.-FUNC(H*(I-1),Y1)/2.)
        Y1 = YOLD
    END DO
END SUBROUTINE

SUBROUTINE EULER(X,Y,H)
!USES EULER'S METHOD
IMPLICIT NONE
    REAL :: X,Y,H
    REAL ::FUNC
    INTEGER :: I

    DO I=0,15
        Y = Y+H*FUNC(H*I,Y)
    END DO
END SUBROUTINE

REAL FUNCTION FUNC(X,Y)
IMPLICIT NONE
    REAL :: X,Y
    FUNC = -Y
    RETURN
END FUNCTION
