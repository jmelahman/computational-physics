PROGRAM PROJ1
IMPLICIT NONE
    REAL, PARAMETER :: PI=4.0*ATAN(1.0)
    REAL :: BMIN,BMAX,E         !INPUT PARAMETERS
    REAL :: RMIN,RMAX           !INTRINSIC VARIABLES
    REAL :: B
    INTEGER :: NP,I
    REAL :: IFT1,IFT2,THETA
    BMIN = .1
    BMAX = 2.5
    E = 1.0
    NP = 10
    RMAX = 3.0                  !DISTANCE WHICH V(R) < .005 VO
    OPEN(10,FILE='./foo.bar')

15  PRINT *,"ENTER THE VALUE OF E IN STANDARIZED UNITS (0 TO END)"
!    READ *,E
    IF (E <= .0001) STOP
25  PRINT *,"ENTER BMIN, BMAX, AND THE NUMBER OF DATA POINTS YOU WOULD LIKE"
!    READ *,BMIN,BMAX,NP

    IF (BMIN >= BMAX .OR. BMAX >= RMAX) THEN
        PRINT*,'BMIN < BMAX < RMAX'
        GOTO 25
    END IF
    PRINT*,'ENERGY =',E
30  PRINT *,'     B       RMIN    THETA'

    DO I=0,NP
        B = BMIN+(BMAX-BMIN)/NP*I
        CALL FIND_RMIN(RMAX,RMIN,B,E)
!USES A TRIG SUBSTITUTION TO FIND EXACT VALUE OF THE FIRST INTEGRAL
        IFT1 = ACOS(B/RMAX)/B
        PRINT *,'EXACT',IFT1
        CALL GAUSS_IFT1(RMAX,B,IFT1)
        PRINT *,'GAUSS',IFT1

        CALL GAUSS_IFT2(RMAX,RMIN,B,E,IFT2)
        THETA = 2.*B*(IFT1-IFT2)*180./PI
        WRITE(10,*) B,THETA
        PRINT 20,B,RMIN,THETA

        CALL CALC_IFT2(RMAX,RMIN,B,E,IFT2)
        THETA = 2.*B*(IFT1-IFT2)*180./PI
        PRINT 20,B,RMIN,THETA
        PRINT *,
    END DO
20  FORMAT(5F9.3)
END PROGRAM PROJ1

SUBROUTINE FIND_RMIN(RMAX,RMIN,B,E)
IMPLICIT NONE
    REAL :: B,E                 !INPUT PARAMETERS
    REAL :: RMAX,RMIN,R,DR      !INTRINSIC VARIABLES
    REAL :: FV                  !6-12 POTENTIAL FUNCTION
    REAL :: FTP                 !FUNCTION FOR FINDING THE TURNING POINT

    FTP(R) = (1-(B/R)**2-FV(R)/E)

    DR = 0.2
    RMIN = RMAX

10  CONTINUE
    RMIN = RMIN-DR
    IF (FTP(RMIN) == 0.0) THEN
!RETURNS THE VALUE RMIN WHEN ROOT IS FOUND
        RETURN
    END IF

    IF (FTP(RMAX)*FTP(RMIN) <= 0.0000001) THEN
!IF THE SIGN OF FTP CHANGES, GOES BACK
!AND REDUCES THE INTERVAL SIZE
        RMIN = RMIN+DR
        DR = DR - DR/2.0
    END IF
    IF (ABS(DR) > .0000001) GOTO 10
!RETURNS THE VALUE OF RMIN IF DR IS SUFFICIENTLY SMALL
        RETURN
END SUBROUTINE FIND_RMIN

SUBROUTINE CALC_IFT2(RMAX,RMIN,B,E,IFT2)
IMPLICIT NONE
    REAL :: RMAX,RMIN,B,E         !INPUT PARAMETERS
    REAL :: R,U,H,VAL,SUM         !INTEGRAL VARIABLES
    REAL :: IFT2                  !INTEGRAND FOR THETA
    REAL :: FV                    !6-12 POTENTIAL FUNCTION
    INTEGER :: I

    H = SQRT(RMAX-RMIN)/(80.0)    !UPPER BOUND = SQRT(RMAX-RMIN)
                                  !LOWER BOUND = 0
    SUM = 0.0

    DO I=0,80
        VAL = 0.0
        U = I*H
        R = U**2+RMIN         !CHANGE OF VARIABLES, U = SQRT(R-RMIN)
                              !DR/DU = 2U
        IFT2 = 2.0*U/R**2/SQRT(1-(B/R)**2-FV(R)/E)

!USES BODE'S EQUATION TO FIND THE INTEGRAL
        IF (I == 0 .OR. I == 80) THEN
            VAL = 14.0*H*IFT2/45.0
        ELSE IF (MOD(I,2) == 1) THEN
            VAL = 64.0*H*IFT2/45.0
        ELSE IF (MOD(I,4) == 2) THEN
            VAL = 24.0*H*IFT2/45.0
        ELSE
            VAL = 28.0*H*IFT2/45.0
        END IF
        SUM = SUM + VAL
    END DO

    IFT2 = SUM
    RETURN
END SUBROUTINE CALC_IFT2

SUBROUTINE GAUSS_IFT1(RMAX,B,IFT1)
!USES GAUSSIAN QUADRATURE METHODS TO SOLVE THE SECOND
!INTERVAL WITH N=5
IMPLICIT NONE
    REAL :: RMAX,B                !INPUT PARAMETERS
    REAL :: R,VAL         	      !INTEGRAL VARIABLES
    REAL :: IFT1                  !INTEGRAND FOR THETA
    REAL, DIMENSION(64)  :: XI,WI !ABSCISSAS AND WEIGHTS
    INTEGER :: I

	CALL FILLARRAY(XI,WI)
	IFT1 = 0
	DO I=1,64
		R = (XI(I)+1.)*(RMAX-B)/2.+B
		VAL = R**(-2)/SQRT(1.-(B/R)**2)*(RMAX-B)/2.
		IFT1 = IFT1 + VAL*WI(I)
	END DO
END SUBROUTINE

SUBROUTINE GAUSS_IFT2(RMAX,RMIN,B,E,IFT2)
!USES GAUSSIAN QUADRATURE METHODS TO SOLVE THE SECOND
!INTERVAL WITH N=5
IMPLICIT NONE
    REAL :: RMAX,RMIN,B,E         !INPUT PARAMETERS
    REAL :: R,VAL         	      !INTEGRAL VARIABLES
    REAL :: IFT2                  !INTEGRAND FOR THETA
    REAL :: FV                    !6-12 POTENTIAL FUNCTION
    REAL, DIMENSION(64)  :: XI,WI !ABSCISSAS AND WEIGHTS
    INTEGER :: I

	CALL FILLARRAY(XI,WI)
	IFT2 = 0
	DO I=1,64
		R = (XI(I)+1.)/2.*(RMAX-RMIN)+RMIN
		VAL = 1./R**2/SQRT(1.-(B/R)**2-FV(R)/E)*(RMAX-RMIN)/2.
		IFT2 = IFT2 + VAL*WI(I)
	END DO
END SUBROUTINE

REAL FUNCTION FV(R)
!FUNCTION FOR THE 6-12 POTENTIAL
IMPLICIT NONE
	REAL :: R
    FV = 4.*(R**(-12)-R**(-6))
	RETURN
END FUNCTION

SUBROUTINE FILLARRAY(XI,WI)
!   FILLS THE TWO ARRAYS WITH VALUES FOR THE GAUSS-LEGENDRE
!   FOR N = 64
    REAL, DIMENSION(64)  :: XI,WI    !ABSCISSAS AND WEIGHTS
    XI(1) = -0.0243502926634244
    XI(2) = 0.0243502926634244
    XI(3) = -0.0729931217877990
    XI(4) = 0.0729931217877990
    XI(5) = -0.1214628192961206
    XI(6) = 0.1214628192961206
    XI(7) = -0.1696444204239928
    XI(8) = 0.1696444204239928
    XI(9) = -0.2174236437400071
    XI(10) = 0.2174236437400071
    XI(11) = -0.2646871622087674
    XI(12) = 0.2646871622087674
    XI(13) = -0.3113228719902110
    XI(14) = 0.3113228719902110
    XI(15) = -0.3572201583376681
    XI(16) = 0.3572201583376681
    XI(17) = -0.4022701579639916
    XI(18) = 0.4022701579639916
    XI(19) = -0.4463660172534641
    XI(20) = 0.4463660172534641
    XI(21) = -0.4894031457070530
    XI(22) = 0.4894031457070530
    XI(23) = -0.5312794640198946
    XI(24) = 0.5312794640198946
    XI(25) = -0.5718956462026340
    XI(26) = 0.5718956462026340
    XI(27) = -0.6111553551723933
    XI(28) = 0.6111553551723933
    XI(29) = -0.6489654712546573
    XI(30) = 0.6489654712546573
    XI(31) = -0.6852363130542333
    XI(32) = 0.6852363130542333
    XI(33) = -0.7198818501716109
    XI(34) = 0.7198818501716109
    XI(35) = -0.7528199072605319
    XI(36) = 0.7528199072605319
    XI(37) = -0.7839723589433414
    XI(38) = 0.7839723589433414
    XI(39) = -0.8132653151227975
    XI(40) = 0.8132653151227975
    XI(41) = -0.8406292962525803
    XI(42) = 0.8406292962525803
    XI(43) = -0.8659993981540928
    XI(44) = 0.8659993981540928
    XI(45) = -0.8893154459951141
    XI(46) = 0.8893154459951141
    XI(47) = -0.9105221370785028
    XI(48) = 0.9105221370785028
    XI(49) = -0.9295691721319396
    XI(50) = 0.9295691721319396
    XI(51) = -0.9464113748584028
    XI(52) = 0.9464113748584028
    XI(53) = -0.9610087996520538
    XI(54) = 0.9610087996520538
    XI(55) = -0.9733268277899110
    XI(56) = 0.9733268277899110
    XI(57) = -0.9833362538846260
    XI(58) = 0.9833362538846260
    XI(59) = -0.9910133714767443
    XI(60) = 0.9910133714767443
    XI(61) = -0.9963401167719553
    XI(62) = 0.9963401167719553
    XI(63) = -0.9993050417357722
    XI(64) = 0.9993050417357722

    WI(1) = 0.0486909570091397
    WI(2) = 0.0486909570091397
    WI(3) = 0.0485754674415034
    WI(4) = 0.0485754674415034
    WI(5) = 0.0483447622348030
    WI(6) = 0.0483447622348030
    WI(7) = 0.0479993885964583
    WI(8) = 0.0479993885964583
    WI(9) = 0.0475401657148303
    WI(10) = 0.0475401657148303
    WI(11) = 0.0469681828162100
    WI(12) = 0.0469681828162100
    WI(13) = 0.0462847965813144
    WI(14) = 0.0462847965813144
    WI(15) = 0.0454916279274181
    WI(16) = 0.0454916279274181
    WI(17) = 0.0445905581637566
    WI(18) = 0.0445905581637566
    WI(19) = 0.0435837245293235
    WI(20) = 0.0435837245293235
    WI(21) = 0.0424735151236536
    WI(22) = 0.0424735151236536
    WI(23) = 0.0412625632426235
    WI(24) = 0.0412625632426235
    WI(25) = 0.0399537411327203
    WI(26) = 0.0399537411327203
    WI(27) = 0.0385501531786156
    WI(28) = 0.0385501531786156
    WI(29) = 0.0370551285402400
    WI(30) = 0.0370551285402400
    WI(31) = 0.0354722132568824
    WI(32) = 0.0354722132568824
    WI(33) = 0.0338051618371416
    WI(34) = 0.0338051618371416
    WI(35) = 0.0320579283548516
    WI(36) = 0.0320579283548516
    WI(37) = 0.0302346570724025
    WI(38) = 0.0302346570724025
    WI(39) = 0.0283396726142595
    WI(40) = 0.0283396726142595
    WI(41) = 0.0263774697150547
    WI(42) = 0.0263774697150547
    WI(43) = 0.0243527025687109
    WI(44) = 0.0243527025687109
    WI(45) = 0.0222701738083833
    WI(46) = 0.0222701738083833
    WI(47) = 0.0201348231535302
    WI(48) = 0.0201348231535302
    WI(49) = 0.0179517157756973
    WI(50) = 0.0179517157756973
    WI(51) = 0.0157260304760247
    WI(52) = 0.0157260304760247
    WI(53) = 0.0134630478967186
    WI(54) = 0.0134630478967186
    WI(55) = 0.0111681394601311
    WI(56) = 0.0111681394601311
    WI(57) = 0.0088467598263639
    WI(58) = 0.0088467598263639
    WI(59) = 0.0065044579689784
    WI(60) = 0.0065044579689784
    WI(61) = 0.0041470332605625
    WI(62) = 0.0041470332605625
    WI(63) = 0.0017832807216964
    WI(64) = 0.0017832807216964
    RETURN
END SUBROUTINE
